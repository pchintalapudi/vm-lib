CLZ oops.core.precompiled.Array[char];
EXT oops.core.precompiled.Object;

IMP CLZ oops.core.precompiled.String;

IMP PROC oops.core.precompiled.String.new(oops.core.precompiled.Array[char])

PROC ref toString() ref this
    DEF ref string; the string to be built
    DEF ref builder; the character array to build into
    DEF int void; dumb return value
    DEF int builder_size; size (later size - 1) of new output array
    DEF int chr; character loaded from this array
    DEF int idx; idx into builder array
    ALEN builder_size this
    BNEQI elements builder_size 0
    LI builder_size 2
    ANEW builder char builder_size
    LI builder_size 1
    BU done
    LBL elements
    MULI builder_size builder_size 3
    ANEW builder char builder_size
    SUBI builder_size builder_size 1
    LI idx 1
    DEF int self_idx; index into this array
    LI self_idx 0
    CALD chr this self_idx
    CASR builder chr idx
    ADDI idx idx 1
    BEQ done idx builder_size
    DEF int comma; a comma character
    DEF int space; a space character
    LI comma ','
    LI space '\s'
    LBL nextchar
    CASR builder comma idx
    ADDI idx idx 1
    CASR builder space idx
    ADDI idx idx 1
    CALD chr this self_idx
    CASR builder chr idx
    ADDI self_idx self_idx 1
    ADDI idx idx 1
    BNEQ nextchar idx builder_size
    LBL done
    LI chr '['
    LI idx 0
    CASR builder chr idx
    LI chr ']'
    CASR builder chr builder_size
    VNEW string oops.core.precompiled.String;
    SINV void oops.core.precompiled.String.new(oops.core.precompiled.Array[char]) string builder;
    RET string
EPROC