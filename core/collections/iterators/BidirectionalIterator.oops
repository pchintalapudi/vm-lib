package core.collections.iterators;
import core.collections.iterators.Iterator;

interface BidirectionalIterator<E> implements Iterator<E> {

    public operator++() -> BidirectionalIterator<E>;
    public operator++(_:long) -> BidirectionalIterator<E>;
    public operator--() -> BidirectionalIterator<E>;
    public operator--(_:long) -> BidirectionalIterator<E>;
    public operator==(other:BidirectionalIterator<E>) -> boolean;
    public operator==(other:Iterator<E>) -> boolean {
        return other instanceof BidirectionalIterator<E> && this == (other as BidirectionalIterator<E>);
    }
    public operator!=(other:Iterator<E>) -> boolean {
        return !(this == other);
    }
    public operator!=(other:BidirectionalIterator<E>) -> boolean {
        return !(this == other);
    }
}