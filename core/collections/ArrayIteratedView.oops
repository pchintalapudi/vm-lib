import core.collections.RandomAccessIterator;
import core.collections.ArrayLike;

class ArrayIteratedView<E> implements ArrayLike<E> {
    private final RandomAccessIterator<E> begin;
    private final RandomAccessIterator<E> end;

    public constructor(RandomAccessIterator<E> begin, RandomAccessIterator<E> end) {
        //Little tricks to copy the iterators
        this.begin = begin + 0;
        this.end = end + 0;
    }

    public constructor(ArrayLike<E> array) {
        this.begin = array.begin();
        this.end = array.end();
    }

    public operator[](int index) -> E {
        if (index > size()) {
            throw new IndexException("Index out of bounds!");
        }
        return (begin + index).value;
    }

    public operator[](int index, E value) -> E {
        return (begin + index).value = value;
    }

    public def size() -> int {
        return end - begin;
    }
}