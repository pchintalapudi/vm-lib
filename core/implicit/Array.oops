import core.implicit.Object;
import core.implicit.String;
import core.implicit.Range;
import core.collections.ArrayLike;
import core.collections.iterators.RandomAccessIterator;

class Array<E> :: ArrayLike<E> {
    public def intrinsic Array(int size);
    public operator intrinsic [](int index) -> E;
    public operator intrinsic [](int index, E element) -> E;
    public def intrinsic size() -> int;
    public def toString() -> String;
    public def copied() -> Array<E> {
        E[] copied = new E[this.size];
        for (int i = 0; i < this.size(); i++) {
            copied[i] = this[i];
        }
        return copied;
    }
}